{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2025-07-28T12:53:08.322Z",
    "end": "2025-07-28T12:53:09.257Z",
    "duration": 935,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "74fb79a7-6a29-4a29-8919-485a890eb0f7",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\test-simple.cy.js",
      "file": "cypress\\e2e\\api\\test-simple.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f6e20ad-1920-4c71-9eab-2543036db7be",
          "title": "Teste Simples de Conexão",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve conectar à API e listar usuários",
              "fullTitle": "Teste Simples de Conexão deve conectar à API e listar usuários",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'http://localhost:3000/users').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array');\n  cy.log(`Encontrados ${response.body.length} usuários`);\n  // Exibe os primeiros 3 usuários no log\n  const sampleUsers = response.body.slice(0, 3);\n  cy.log('Amostra de usuários:', JSON.stringify(sampleUsers, null, 2));\n});",
              "err": {},
              "uuid": "e72f4ad0-1097-4954-a5d2-c274b30fd799",
              "parentUUID": "5f6e20ad-1920-4c71-9eab-2543036db7be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve verificar o endpoint de tickets",
              "fullTitle": "Teste Simples de Conexão deve verificar o endpoint de tickets",
              "timedOut": null,
              "duration": 191,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'http://localhost:3000/tickets',\n  failOnStatusCode: false\n}).then(response => {\n  cy.log('Resposta do endpoint /tickets:', {\n    status: response.status,\n    body: response.body\n  });\n  // O endpoint pode retornar 200 (com array), 404 ou 500\n  if (response.status === 200) {\n    expect(response.body).to.be.an('array');\n  } else if (response.status === 500) {\n    cy.log('Erro 500 no servidor ao acessar /tickets');\n    // Podemos pular o teste ou marcar como pendente\n    cy.log('O endpoint /tickets está retornando erro 500. Verifique a documentação da API.');\n    (void 0).skip(); // Pula o teste\n  } else {\n    expect(response.status).to.eq(404);\n  }\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'skip')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'skip')\n    at Context.eval (webpack:///./cypress/e2e/api/test-simple.cy.js:32:13)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:120949:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:120960:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:121211:21)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:141532:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:147477:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "264bb559-1e75-43a3-9059-fbef6fb9eb9f",
              "parentUUID": "5f6e20ad-1920-4c71-9eab-2543036db7be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e72f4ad0-1097-4954-a5d2-c274b30fd799"
          ],
          "failures": [
            "264bb559-1e75-43a3-9059-fbef6fb9eb9f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 262,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-25T19:08:07.407Z",
    "end": "2025-07-25T19:08:07.590Z",
    "duration": 183,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b9febde2-7218-49d8-8653-4d9a02b2fcd4",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\health-check.cy.js",
      "file": "cypress\\e2e\\api\\health-check.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "18e8e279-2d98-4481-8687-4616a152487d",
          "title": "Health Check - API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve responder na porta 3000",
              "fullTitle": "Health Check - API deve responder na porta 3000",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'http://localhost:3000',\n  failOnStatusCode: false\n}).then(response => {\n  // A API pode retornar 404 se não tiver um endpoint na raiz\n  // Vamos apenas verificar se recebemos alguma resposta\n  expect(response).to.have.property('status');\n  cy.log('Resposta da API:', response.status, response.body);\n});",
              "err": {},
              "uuid": "6b43f509-a7fe-4838-9cad-daac71dde5fb",
              "parentUUID": "18e8e279-2d98-4481-8687-4616a152487d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve ter o endpoint /users acessível",
              "fullTitle": "Health Check - API deve ter o endpoint /users acessível",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'http://localhost:3000/users',\n  failOnStatusCode: false\n}).then(response => {\n  cy.log('Resposta de /users:', response.status, response.body);\n  // Esperamos 200 (OK) ou 404 se a rota não existir\n  expect([200, 404]).to.include(response.status);\n});",
              "err": {},
              "uuid": "9b94654d-40c0-4958-8905-ba6e703f9ac4",
              "parentUUID": "18e8e279-2d98-4481-8687-4616a152487d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b43f509-a7fe-4838-9cad-daac71dde5fb",
            "9b94654d-40c0-4958-8905-ba6e703f9ac4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}